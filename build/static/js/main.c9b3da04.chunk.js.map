{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","filterChange","createAction","filter","payload","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","contact","post","deleteContact","contactId","delete","items","createReducer","fulfilled","_","state","id","loading","pending","rejected","error","contactReducer","combineReducers","store","configureStore","reducer","contacts","devTools","process","Container","children","className","s","container","getContacts","getFilter","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","useState","setName","phone","setPhone","nameInputID","uuidv4","numberInputID","useSelector","contactsSelectors","dispatch","useDispatch","handleInputChange","e","currentTarget","value","onSubmit","preventDefault","some","alert","contactsOperations","Form","htmlFor","label","input","type","onChange","pattern","title","required","Filter","filterId","contactsActions","target","ContactList","useEffect","visibleContacts","list","map","item","contactInfo","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9b3da04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__ax4Jx\",\"input\":\"Filter_input__U-GLF\",\"label\":\"Filter_label__2PVIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2hUDM\",\"item\":\"ContactList_item__3ue9D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Rvg3\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterChange = createAction(\"contacts/changeFilter\", (filter) => ({\r\n  payload: { filter },\r\n}));\r\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://61b9dea238f69a0017ce631d.mockapi.io\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fecthContacts\",\r\n  async () => {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (contact) => {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (contactId) => {\r\n    axios.delete(`/contacts/${contactId}`);\r\n    return contactId;\r\n  }\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filterChange } from \"./contacts-actions\";\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from \"./contacts-operations\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [filterChange]: (_, { payload }) => payload.filter,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.pending]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nconst contactReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport { contactReducer };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { contactReducer } from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store };\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  getContacts,\r\n  getFilter,\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsOperations, contactsSelectors } from \"redux/contacts\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n\r\n  const nameInputID = uuidv4();\r\n  const numberInputID = uuidv4();\r\n  const contacts = useSelector(contactsSelectors.getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    name === \"name\" ? setName(value) : setPhone(value);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setName(\"\");\r\n    setPhone(\"\");\r\n  };\r\n\r\n  function verifyDuplication() {\r\n    return contacts.some((contact) => contact.name === name);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (verifyDuplication()) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact({ name, phone }));\r\n    resetState();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.Form}>\r\n      <label htmlFor={nameInputID} className={s.label}>\r\n        Name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        id={nameInputID}\r\n        onChange={handleInputChange}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n        required\r\n      />\r\n\r\n      <label htmlFor={numberInputID} className={s.label}>\r\n        Number\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"tel\"\r\n        name=\"phone\"\r\n        value={phone}\r\n        id={numberInputID}\r\n        onChange={handleInputChange}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button type=\"submit\" className=\"button\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsActions, contactsSelectors } from \"redux/contacts\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const filterId = uuidv4();\r\n\r\n  return (\r\n    <div className={s.filter}>\r\n      <label className={s.label} htmlFor={filterId}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        id={filterId}\r\n        onChange={(e) => dispatch(contactsActions.filterChange(e.target.value))}\r\n      ></input>\r\n    </div>\r\n  );\r\n}\r\n","import s from \"./ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContact,\r\n} from \"redux/contacts/contacts-operations\";\r\nimport { getFilteredContacts } from \"redux/contacts/contacts-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const visibleContacts = useSelector(getFilteredContacts);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {visibleContacts.map(({ name, id, phone }) => (\r\n        <li className={s.item} key={id}>\r\n          <span className={s.contactInfo}>\r\n            {name}: {phone}\r\n          </span>\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__3atDu\",\"label\":\"ContactForm_label__2YTta\",\"input\":\"ContactForm_input__13PXN\"};"],"sourceRoot":""}